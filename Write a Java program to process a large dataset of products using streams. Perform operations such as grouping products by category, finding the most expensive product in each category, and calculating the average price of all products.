import java.util.*;
import java.util.stream.*;

class Product {
    String name;
    String category;
    double price;

    public Product(String name, String category, double price) {
        this.name = name;
        this.category = category;
        this.price = price;
    }

    @Override
    public String toString() {
        return name + " (" + category + ", $" + price + ")";
    }
}

public class ProductProcessor {
    public static void main(String[] args) {
        List<Product> products = Arrays.asList(
            new Product("Laptop", "Electronics", 1200.0),
            new Product("Smartphone", "Electronics", 800.0),
            new Product("Tablet", "Electronics", 400.0),
            new Product("Shirt", "Clothing", 50.0),
            new Product("Jeans", "Clothing", 80.0),
            new Product("Blender", "Home Appliance", 150.0),
            new Product("Oven", "Home Appliance", 300.0)
        );

        // Grouping products by category
        Map<String, List<Product>> productsByCategory = products.stream()
            .collect(Collectors.groupingBy(p -> p.category));
        System.out.println("Products by category: " + productsByCategory);

        // Finding the most expensive product in each category
        Map<String, Optional<Product>> mostExpensiveByCategory = products.stream()
            .collect(Collectors.groupingBy(
                p -> p.category,
                Collectors.maxBy(Comparator.comparingDouble(p -> p.price))
            ));
        System.out.println("Most expensive product in each category: " + mostExpensiveByCategory);

        // Calculating the average price of all products
        double avgPrice = products.stream()
            .mapToDouble(p -> p.price)
            .average()
            .orElse(0.0);
        System.out.println("Average price of all products: $" + avgPrice);
    }
}
